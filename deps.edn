{:paths   ["src" "resources"]
 :deps    {org.clojure/clojure        {:mvn/version "1.12.1"}
           org.clojure/clojurescript  {:mvn/version "1.12.42"}
           org.clojure/core.async     {:mvn/version "1.9.808-alpha1"}
           saberstack/loop            {:git/url "https://github.com/saberstack/loop"
                                       :git/sha "3285179c4e7e021ef3179936cdb1f08887c963ba"}
           net.cgrand/xforms          {:mvn/version "0.19.4"}
           datascript/datascript      {:git/url "https://github.com/saberstack/datascript"
                                       :git/sha "c6dd4ac6ec784d4720dd0a5ecabd055e2fda9c95"}
           dev.weavejester/medley     {:mvn/version "1.8.1"}
           techascent/tech.ml.dataset {:mvn/version "7.061"}
           com.taoensso/nippy         {:mvn/version "3.6.0"}
           ;TODO potentially remove
           org.clojure/tools.logging  {:mvn/version "1.3.0"}
           ;TODO keep yes/no?
           org.slf4j/slf4j-simple     {:mvn/version "2.0.7"}
           ;TODO move deps below to a test/dev/etc aliases
           com.taoensso/timbre        {:mvn/version "6.7.1"}
           org.clojure/test.check     {:mvn/version "1.1.1"}
           nrepl/nrepl                {:mvn/version "1.0.0"}
           babashka/process           {:mvn/version "0.6.23"}
           babashka/fs                {:mvn/version "0.5.26"}
           aleph/aleph                {:mvn/version "0.9.0"}
           ring/ring-defaults         {:mvn/version "0.6.0"}
           yogthos/config             {:mvn/version "1.2.1"}
           com.datomic/peer           {:mvn/version "1.0.7387"}}

 :aliases {:dev
           {:main-opts   ["-e" "(set! *warn-on-reflection* true)"]
            :extra-paths ["test" "dev"]
            :extra-deps  {criterium/criterium                       {:mvn/version "0.4.6"}
                          com.cnuernber/charred                     {:mvn/version "1.036"}
                          com.techascent/tmducken                   {:mvn/version "0.10.1-01"}
                          hato/hato                                 {:mvn/version "1.0.0"}
                          org.babashka/http-client                  {:mvn/version "0.4.22"}
                          com.clojure-goes-fast/clj-memory-meter    {:mvn/version "0.4.0"}
                          com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.7"}
                          org.clojars.abhinav/snitch                {:mvn/version "0.1.15"}
                          vvvvalvalval/scope-capture                {:mvn/version "0.3.3"}
                          philoskim/debux                           {:mvn/version "0.8.2"}
                          ;org.scicloj/noj                           {:mvn/version "2-alpha12"}
                          com.github.seancorfield/next.jdbc         {:mvn/version "1.3.1002"}
                          org.xerial/sqlite-jdbc                    {:mvn/version "3.49.1.0"}
                          com.github.seancorfield/honeysql          {:mvn/version "2.7.1295"}
                          io.github.nextjournal/clerk               {:mvn/version "0.17.1102"}}}
           ; use this alias for clj-memory-meter to work
           ; clj -M:add-opens -m org.zsxf.core
           :add-opens
           {:jvm-opts ["-XX:+EnableDynamicAgentLoading"
                       "-XX:+PrintCommandLineFlags"
                       "-XX:+UnlockExperimentalVMOptions"
                       "-XX:+UseCompactObjectHeaders"
                       "-Djdk.attach.allowAttachSelf"
                       "--add-opens=java.base/java.io=ALL-UNNAMED"
                       "--add-opens=java.base/java.lang=ALL-UNNAMED"
                       "--add-opens=java.base/java.lang.annotation=ALL-UNNAMED"
                       "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED"
                       "--add-opens=java.base/java.lang.module=ALL-UNNAMED"
                       "--add-opens=java.base/java.lang.ref=ALL-UNNAMED"
                       "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED"
                       "--add-opens=java.base/java.math=ALL-UNNAMED"
                       "--add-opens=java.base/java.net=ALL-UNNAMED"
                       "--add-opens=java.base/java.net.spi=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.channels=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.channels.spi=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.charset=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.charset.spi=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.file=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.file.attribute=ALL-UNNAMED"
                       "--add-opens=java.base/java.nio.file.spi=ALL-UNNAMED"
                       "--add-opens=java.base/java.security=ALL-UNNAMED"
                       "--add-opens=java.base/java.security.cert=ALL-UNNAMED"
                       "--add-opens=java.base/java.security.interfaces=ALL-UNNAMED"
                       "--add-opens=java.base/java.security.spec=ALL-UNNAMED"
                       "--add-opens=java.base/java.text=ALL-UNNAMED"
                       "--add-opens=java.base/java.text.spi=ALL-UNNAMED"
                       "--add-opens=java.base/java.time=ALL-UNNAMED"
                       "--add-opens=java.base/java.time.chrono=ALL-UNNAMED"
                       "--add-opens=java.base/java.time.format=ALL-UNNAMED"
                       "--add-opens=java.base/java.time.temporal=ALL-UNNAMED"
                       "--add-opens=java.base/java.time.zone=ALL-UNNAMED"
                       "--add-opens=java.base/java.util=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.function=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.jar=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.regex=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.spi=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.stream=ALL-UNNAMED"
                       "--add-opens=java.base/java.util.zip=ALL-UNNAMED"
                       "--add-opens=java.base/javax.crypto=ALL-UNNAMED"
                       "--add-opens=java.base/javax.crypto.interfaces=ALL-UNNAMED"
                       "--add-opens=java.base/javax.crypto.spec=ALL-UNNAMED"
                       "--add-opens=java.base/javax.net=ALL-UNNAMED"
                       "--add-opens=java.base/javax.net.ssl=ALL-UNNAMED"
                       "--add-opens=java.base/javax.security.auth=ALL-UNNAMED"
                       "--add-opens=java.base/javax.security.auth.callback=ALL-UNNAMED"
                       "--add-opens=java.base/javax.security.auth.login=ALL-UNNAMED"
                       "--add-opens=java.base/javax.security.auth.spi=ALL-UNNAMED"
                       "--add-opens=java.base/javax.security.auth.x500=ALL-UNNAMED"
                       "--add-opens=java.base/javax.security.cert=ALL-UNNAMED"
                       "--add-opens=java.desktop/sun.java2d.marlin=ALL-UNNAMED"
                       "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"
                       "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
                       "--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED"]}
           :jvm-max-heap-8gb
           {:jvm-opts ["-Xmx8g"]}
           :jvm-max-heap-32gb
           {:jvm-opts ["-Xmx32g"]}
           :jvm-heap-32gb
           {:jvm-opts ["-Xms32g" "-Xmx32g"]}
           :jvm-heap-48gb
           {:jvm-opts ["-Xms48g" "-Xmx48g"]}
           :jvm-heap-64gb
           {:jvm-opts ["-Xms64g" "-Xmx64g"]}
           :raspasov/local
           {:extra-deps
            {org.saberstack/clj-hackernews-api
             {:local/root "/Users/raspasov/projects/saberstack/clj-hackernews-api"}}
            :jvm-opts [
                       ;"-XX:MaxGCPauseMillis=2000"
                       ;"-Dclojure.compiler.direct-linking=true"
                       ]}
           :socket-repl
           {:jvm-opts ["-Dclojure.server.repl={:port 5555 :accept clojure.core.server/repl :server-daemon false}"]}
           :test-runner
           {:extra-paths ["test"]
            :extra-deps  {io.github.cognitect-labs/test-runner
                          {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
            :main-opts   ["-m" "cognitect.test-runner"]
            :exec-fn     cognitect.test-runner.api/test}}}
